问题描述：
给出一个整数数组 nums 和一个整数 k。划分数组（即移动数组 nums 中的元素），使得：
所有小于k的元素移到左边
所有大于等于k的元素移到右边
返回数组划分的位置，即数组中第一个位置 i，满足 nums[i] 大于等于 k。

样例说明：
给出数组 nums = [3,2,2,1] 和 k = 2，返回 1.

代码实现：
/**
 * @author 作者 John L:
 * @version 创建时间：May 12, 2018 5:46:19 PM
 */
public class TestPartitionArray {
	@Test
	public void test() {
		int[] nums = new int[] { 1, 5, 2, 4, 6, 1, 5, 6 };
		int k = 3;
		int partition = partitionArray(nums, k);
		System.out.println(partition);
		for (int i : nums) {
			System.out.print(i + "，");
		}
	}

	private int partitionArray(int[] nums, int k) {
		int smallerEnd = -1;
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] < k) {
				smallerEnd++;

				int temp = nums[smallerEnd];
				nums[smallerEnd] = nums[i];
				nums[i] = temp;
			}
		}
		return smallerEnd + 1;
	}
}