
问题描述：
	实现 pow(x,n)
	
注意事项：
	不用担心精度，当答案和标准输出差绝对值小于1e-3时都算正确
	
样例：
	Pow(2.1, 3) = 9.261
	Pow(0, 1) = 0
	Pow(1, 0) = 1
	
代码：
public class Solution {
    /*
     * @param x: the base number
     * @param n: the power number
     * @return: the result
     */
    public double myPow(double x, int n) {
		//Integer.MIN_VALUE = -2147483648，这是一个特殊的数字
		//		int a = -2147483648;
		//		int b = -a;		//	b=-2147483648
		//		int c = a-1;	//	c= 2147483648
		//具体可参考博客：	https://blog.csdn.net/majing19921103/article/details/44863363
		
		if (n == Integer.MIN_VALUE) return 1.0 / myPow(x, n - 1);
		
		if (n < 0) return 1.0 / myPow(x,  - n);
        if (x == 0) return 0;
		if (n == 0) return 1;
		if (n == 1) return x;
		
		double half = myPow(x, n >> 1);
        return (n & 1) == 1 ? half * half * x : half * half;
    }
}